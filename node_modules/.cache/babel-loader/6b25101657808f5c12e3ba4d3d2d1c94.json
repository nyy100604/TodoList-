{"ast":null,"code":"import _defineProperty from\"/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import{configureStore}from\"@reduxjs/toolkit\";import todoReducer from\"./slices/todo\";import{combineReducers}from\"@reduxjs/toolkit\";import{todoApiService}from\"./services/todoApi\";var reducers=combineReducers(_defineProperty({todoReducer:todoReducer},todoApiService.reducerPath,todoApiService.reducer));var store=configureStore({reducer:reducers,middleware:function middleware(getCurrentMiddlewares){return getCurrentMiddlewares()// .concat(loggerMiddleware)\n// .concat(weiMiddleware)\n.concat(todoApiService.middleware);}});//判斷現在reduces現在的型態\nexport default store;","map":{"version":3,"sources":["/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/store.ts"],"names":["configureStore","todoReducer","combineReducers","todoApiService","reducers","reducerPath","reducer","store","middleware","getCurrentMiddlewares","concat"],"mappings":"kJAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,OAASC,eAAT,KAAgC,kBAAhC,CACA,OAASC,cAAT,KAA+B,oBAA/B,CAEA,GAAMC,CAAAA,QAAQ,CAAGF,eAAe,kBAC9BD,WAAW,CAAXA,WAD8B,EAE7BE,cAAc,CAACE,WAFc,CAEAF,cAAc,CAACG,OAFf,EAAhC,CAKA,GAAMC,CAAAA,KAAK,CAAGP,cAAc,CAAC,CAC3BM,OAAO,CAAEF,QADkB,CAE3BI,UAAU,CAAE,oBAACC,qBAAD,CAA2B,CACrC,MACEA,CAAAA,qBAAqB,EACnB;AACA;AAFmB,CAGlBC,MAHH,CAGUP,cAAc,CAACK,UAHzB,CADF,CAMD,CAT0B,CAAD,CAA5B,CAWA;AAGA,cAAeD,CAAAA,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./slices/todo\";\nimport { loggerMiddleware, weiMiddleware } from \"./middleware\";\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport { todoApiService } from \"./services/todoApi\";\n\nconst reducers = combineReducers({\n  todoReducer,\n  [todoApiService.reducerPath]: todoApiService.reducer,\n});\n\nconst store = configureStore({\n  reducer: reducers,\n  middleware: (getCurrentMiddlewares) => {\n    return (\n      getCurrentMiddlewares()\n        // .concat(loggerMiddleware)\n        // .concat(weiMiddleware)\n        .concat(todoApiService.middleware)\n    );\n  },\n});\n//判斷現在reduces現在的型態\nexport type RootState = ReturnType<typeof reducers>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}