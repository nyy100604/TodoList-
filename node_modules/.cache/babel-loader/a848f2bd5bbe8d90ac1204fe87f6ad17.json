{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={todoList:[]};//幫助產生reducer, action, state\nexport var todoSlice=createSlice({name:\"todo\",// `createSlice` will infer the state type from the `initialState` argument\ninitialState:initialState,//1.state -> 當下的狀態\n//2.action ->對應的動作\nreducers:{addTodo:function addTodo(state,action){state.todoList.push(action.payload);},addTimestamp:function addTimestamp(state){state.todoList.push(Date.now().toString());}}});var _todoSlice$actions=todoSlice.actions,addTodo=_todoSlice$actions.addTodo,addTimestamp=_todoSlice$actions.addTimestamp;export{addTodo,addTimestamp};export default todoSlice.reducer;","map":{"version":3,"sources":["/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/slices/todo.ts"],"names":["createSlice","initialState","todoList","todoSlice","name","reducers","addTodo","state","action","push","payload","addTimestamp","Date","now","toString","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAMA,GAAMC,CAAAA,YAA0B,CAAG,CACjCC,QAAQ,CAAE,EADuB,CAAnC,CAIA;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAGH,WAAW,CAAC,CACnCI,IAAI,CAAE,MAD6B,CAEnC;AACAH,YAAY,CAAZA,YAHmC,CAInC;AACA;AACAI,QAAQ,CAAE,CACRC,OAAO,CAAE,iBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1BD,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B,EACD,CAHO,CAIRC,YAAY,CAAE,sBAACJ,KAAD,CAAW,CACvBA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBG,IAAI,CAACC,GAAL,GAAWC,QAAX,EAApB,EACD,CANO,CANyB,CAAD,CAA7B,CAgBA,uBAAkCX,SAAS,CAACY,OAA5C,CAAQT,OAAR,oBAAQA,OAAR,CAAiBK,YAAjB,oBAAiBA,YAAjB,C,6BACP,cAAeR,CAAAA,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\ntype initialState = {\n  todoList: Array<string>;\n};\n\nconst initialState: initialState = {\n  todoList: [],\n};\n\n//幫助產生reducer, action, state\nexport const todoSlice = createSlice({\n  name: \"todo\",\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  //1.state -> 當下的狀態\n  //2.action ->對應的動作\n  reducers: {\n    addTodo: (state, action) => {\n      state.todoList.push(action.payload);\n    },\n    addTimestamp: (state) => {\n      state.todoList.push(Date.now().toString());\n    },\n  },\n});\n\nexport const { addTodo, addTimestamp } = todoSlice.actions;\nexport default todoSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}