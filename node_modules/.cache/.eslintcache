[{"/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/index.tsx":"1","/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/App.tsx":"2","/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/store.ts":"3","/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/slices/todo.ts":"4","/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/hooks.tsx":"5","/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/middleware.ts":"6","/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/services/todoApi.ts":"7"},{"size":391,"mtime":1675331468075,"results":"8","hashOfConfig":"9"},{"size":2463,"mtime":1676209099769,"results":"10","hashOfConfig":"9"},{"size":802,"mtime":1675576042159,"results":"11","hashOfConfig":"9"},{"size":697,"mtime":1676216886043,"results":"12","hashOfConfig":"9"},{"size":380,"mtime":1675334182993,"results":"13","hashOfConfig":"9"},{"size":749,"mtime":1675571398837,"results":"14","hashOfConfig":"9"},{"size":523,"mtime":1656009136521,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1rkplp2",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/index.tsx",[],[],["42","43"],"/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/App.tsx",["44","45"],[],"import \"./App.css\";\nimport styled from \"styled-components\";\nimport { useAppSelector, useAppDispatch } from \"./hooks\";\nimport { addTimestamp, addTodo } from \"./slices/todo\";\nimport { useState } from \"react\";\nimport { useGetTodoListQuery } from \"./services/todoApi\";\nimport React from \"react\";\n\nconst Wrapper = styled.div`\n  padding: 1.5rem;\n`;\n\nconst Title = styled.h2`\n  font-weight: 900;\n  margin-top: 2rem;\n`;\n\nconst NoteInput = styled.input`\n  width: 100%;\n  height: 40px;\n  border-radius: 10px;\n  padding-left: 0.5rem;\n  box-sizing: border-box;\n`;\n\nconst SubmitBtn = styled.button`\n  width: 100%;\n  box-sizing: border-box;\n  height: 40px;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  border-radius: 10px;\n  border: 0;\n  font-weight: 900;\n  margin-top: 1rem;\n\n  :active {\n    background: #000000be;\n  }\n`;\n\nconst Item = styled.div`\n  margin-top: 1rem;\n\n  > b {\n    margin-right: 0.5rem;\n  }\n`;\n\nfunction App() {\n  const todoReducer = useAppSelector((state) => state.todoReducer);\n  const todoList = todoReducer.todoList;\n  const [text, setText] = useState(\"\");\n  const dispatch = useAppDispatch();\n  const { data, error, isLoading } = useGetTodoListQuery(\"1\");\n\n  console.log(\"data\", data);\n  console.log(\"error\", error);\n  console.log(\"isLoading\", isLoading);\n\n  const { userId = \"N/A\", title = \"N/A\" } = data || {};\n\n  return (\n    <Wrapper>\n      <Title>TODO LIST</Title>\n\n      <NoteInput\n        value={text}\n        type=\"text\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setText(e.target.value);\n        }}\n      />\n      <SubmitBtn\n        onClick={() => {\n          if (text === \"\") {\n            alert(\"請輸入TODO內容\");\n            return;\n          }\n\n          dispatch(addTodo(text));\n          setText(\"\");\n        }}\n      >\n        Submit\n      </SubmitBtn>\n      <SubmitBtn\n        onClick={() => {\n          dispatch(addTimestamp());\n        }}\n      >\n        Record Timestamp\n      </SubmitBtn>\n      <Title>List</Title>\n      {todoList.map((data, index) => {\n        return (\n          <Item key={data}>\n            <b>{index + 1}</b>\n            {data}\n          </Item>\n        );\n      })}\n      <Title>List2</Title>\n      {isLoading && <p>isLoading</p>}\n      {!isLoading && (\n        <div>\n          <p>USER ID:{data?.userId}</p>\n          <p>USER TITLE:{data?.title}</p>\n        </div>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default App;\n","/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/store.ts",["46","47"],[],"import { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./slices/todo\";\nimport { loggerMiddleware, weiMiddleware } from \"./middleware\";\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport { todoApiService } from \"./services/todoApi\";\n\nconst reducers = combineReducers({\n  todoReducer,\n  [todoApiService.reducerPath]: todoApiService.reducer,\n});\n\nconst store = configureStore({\n  reducer: reducers,\n  middleware: (getCurrentMiddlewares) => {\n    return (\n      getCurrentMiddlewares()\n        // .concat(loggerMiddleware)\n        // .concat(weiMiddleware)\n        .concat(todoApiService.middleware)\n    );\n  },\n});\n//判斷現在reduces現在的型態\nexport type RootState = ReturnType<typeof reducers>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;\n","/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/slices/todo.ts",["48"],[],"/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/hooks.tsx",[],[],"/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/middleware.ts",[],[],["49","50"],"/Users/liuweicheng/Desktop/reactTs/bruce-redux-todo-origin/src/services/todoApi.ts",[],[],["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":64,"column":11,"nodeType":"59","messageId":"60","endLine":64,"endColumn":17},{"ruleId":"57","severity":1,"message":"61","line":64,"column":27,"nodeType":"59","messageId":"60","endLine":64,"endColumn":32},{"ruleId":"57","severity":1,"message":"62","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":26},{"ruleId":"57","severity":1,"message":"63","line":3,"column":28,"nodeType":"59","messageId":"60","endLine":3,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":7,"column":7,"nodeType":"59","messageId":"66","endLine":7,"endColumn":33},{"ruleId":"53","replacedBy":"67"},{"ruleId":"55","replacedBy":"68"},{"ruleId":"53","replacedBy":"69"},{"ruleId":"55","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'loggerMiddleware' is defined but never used.","'weiMiddleware' is defined but never used.","@typescript-eslint/no-redeclare","'initialState' is already defined.","redeclared",["71"],["72"],["71"],["72"],"no-global-assign","no-unsafe-negation"]